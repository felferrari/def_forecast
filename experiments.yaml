experiment_name: Deforestation Prediction
default:
  features_list: 
    &feature_list
    - ArDS_4
    - Biweekly
    - AcAr
    - CtDS
    - DeAr
    # - Cloud
    - XArDS
    - XDeDS
    - OcDS
    - XQ 
    # - DS
    # - DryMonths_0
    # - Coordinates_0,1
    # - Distbd_0,1,2,3,4
    # - Dvd_0
    # - EF_0,1,2,3,4,5,6
  # optimizer:
  #   class_path: torch.optim.Adam
  #   params:
  #     lr: 1.0e-7
  # criterion:
  #   class_path: torch.nn.MSELoss
  #   params:
  #     reduction: none
  train_params:
    early_stop_patience: 10
    max_epochs: 500

  predict_params:
    lag_0: 120
    lag_size: 48

identity:
  features_list: ['ArDS_1'] 
  model:
    class_path: models.vector.Identity
    #params:
  data_module:
    class_path: datasets.vector.classification.DataModule
    params:
      normalize_data: False

mlp_cls:
  model:
    class_path: models.vector.MlpClasifier
    params:
      layers: [64, 128, 256, 512, 128, 64]
  data_module:
    class_path: datasets.vector.DataModule
    params:
      normalize_data: False
      task: classification
  criterion:
    class_path: torch.nn.CrossEntropyLoss
    params:
      reduction: none
  optimizer:
    class_path: torch.optim.Adam
    params:
      lr: 1.0e-5

mlp_cls_0:
  parent_experiment: mlp_cls

mlp_reg:
  model:
    class_path: models.vector.MlpRegression
    params:
      layers: [64, 256, 512, 256, 128]
  data_module:
    class_path: datasets.vector.DataModule
    params:
      normalize_data: True
      task: regression
  criterion:
    class_path: torch.nn.MSELoss
    params:
      reduction: none
  optimizer:
    class_path: torch.optim.Adam
    params:
      lr: 2.0e-7

mlp_features:
  parent_experiment: mlp_reg
  features_list: [ArDS_6, Biweekly, AcAr, CtDS, DeAr, Cloud, XArDS, XDeDS, OcDS, XQ, DryMonths_0, 'Coordinates_0,1', 'Distbd_0,1,2,3,4', Dvd_0, 'EF_0,1,2,3,4,5,6' ]

mlp_features_2:
  parent_experiment: mlp_reg
  features_list: [ArDS_6, Biweekly, AcAr, CtDS, DeAr, Cloud, XArDS, XDeDS, OcDS, XQ, DryMonths_0, 'Coordinates_0,1', 'Distbd_0,1,2,3,4', Dvd_0, 'EF_0,1,2,3,4,5,6' ]


mlp_reg_0:
  parent_experiment: mlp_reg

mlp_reg_1:
  parent_experiment: mlp_reg
  data_module:
    params:
      label_weights_bins: [0, 1, 2, 5, 10]

mlp_reg_2:
  parent_experiment: mlp_reg
  data_module:
    params:
      sample_bins: [0, 1, 2, 5, 10]

mlp_reg_3:
  parent_experiment: mlp_reg
  data_module:
    params:
      sample_bins: [0, 1, 2, 5, 10]
      label_weights_bins: [0, 1, 2, 5, 10]

transformer_reg:
  model:
    class_path: models.vector.TransformerRegression
    params:
      n_layers: 6
      d_model: 256
      n_head: 8
  data_module:
    class_path: datasets.vector.DataModule
    params:
      normalize_data: True
      task: regression
  criterion:
    class_path: torch.nn.MSELoss
    params:
      reduction: none
  optimizer:
    class_path: torch.optim.Adam
    params:
      lr: 2.0e-7

transformer_features:
  parent_experiment: transformer_reg
  features_list: [ArDS_6, Biweekly, AcAr, CtDS, DeAr, Cloud, XArDS, XDeDS, OcDS, XQ, DryMonths_0, 'Coordinates_0,1', 'Distbd_0,1,2,3,4', Dvd_0, 'EF_0,1,2,3,4,5,6' ]
  
transformer_features_2:
  parent_experiment: transformer_reg
  features_list: [ArDS_6, Biweekly, AcAr, CtDS, DeAr, Cloud, XArDS, XDeDS, OcDS, XQ, DryMonths_0, 'Coordinates_0,1', 'Distbd_0,1,2,3,4', Dvd_0, 'EF_0,1,2,3,4,5,6' ]
  
transformer_reg_0:
  parent_experiment: transformer_reg

transformer_reg_1:
  parent_experiment: transformer_reg
  data_module:
    params:
      label_weights_bins: [0, 1, 2, 5, 10]

transformer_reg_2:
  parent_experiment: transformer_reg
  data_module:
    params:
      sample_bins: [0, 1, 2, 5, 10]

transformer_reg_3:
  parent_experiment: transformer_reg
  data_module:
    params:
      sample_bins: [0, 1, 2, 5, 10]
      label_weights_bins: [0, 1, 2, 5, 10]

transformer_reg_4:
  parent_experiment: transformer_reg
  data_module:
    params:
      label_weights_bins: [0]

transformer_reg_5:
  parent_experiment: transformer_reg
  data_module:
    params:
      sample_bins: [0]

transformer_reg_6:
  parent_experiment: transformer_reg
  data_module:
    params:
      sample_bins: [0]
      label_weights_bins: [0]